---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/550/reviews?language=en-US&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Authorization:
      - Bearer <Authorization>
      User-Agent:
      - Faraday v2.9.0
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Mon, 01 Apr 2024 15:09:05 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=18377
      X-Memc:
      - HIT
      X-Memc-Key:
      - 31ada2a7b574753a2e81a5a37c192e93
      X-Memc-Age:
      - '5011'
      X-Memc-Expires:
      - '18377'
      Etag:
      - W/"5b7c56d5793082e675d872d6212b16f9"
      Vary:
      - Accept-Encoding
      - Origin
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 3a20a3ce17ba40a6526ea3bc41b61ea8.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - ATL58-P2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - R7Cg5wfbihFPYzn7-g5P9QsoLcBvo0xZrYJhCyS7SDOnk36NLOtbPA==
      Age:
      - '8'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 01 Apr 2024 15:09:13 GMT
recorded_with: VCR 6.2.0
